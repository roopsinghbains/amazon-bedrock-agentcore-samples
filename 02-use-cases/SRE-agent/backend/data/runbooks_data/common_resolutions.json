{
  "resolutions": [
    {
      "id": "oom-resolution",
      "issue": "OutOfMemoryError",
      "symptoms": [
        "Java heap space errors",
        "Pod evictions",
        "Application crashes"
      ],
      "quick_fixes": [
        {
          "action": "Restart affected pods",
          "command": "kubectl delete pod <pod-name>",
          "duration": "2 minutes",
          "effectiveness": "Temporary"
        },
        {
          "action": "Increase memory limits",
          "command": "kubectl set resources deployment <name> --limits=memory=2Gi",
          "duration": "5 minutes",
          "effectiveness": "Medium-term"
        }
      ],
      "permanent_solutions": [
        "Optimize memory usage in code",
        "Implement proper caching strategies",
        "Configure JVM heap settings appropriately",
        "Enable horizontal pod autoscaling"
      ]
    },
    {
      "id": "connection-pool-exhaustion",
      "issue": "Database Connection Pool Exhausted",
      "symptoms": [
        "Connection timeout errors",
        "Slow response times",
        "Service unavailability"
      ],
      "quick_fixes": [
        {
          "action": "Increase connection pool size",
          "config": "spring.datasource.hikari.maximum-pool-size=20",
          "duration": "5 minutes",
          "effectiveness": "Immediate"
        },
        {
          "action": "Restart application pods",
          "command": "kubectl rollout restart deployment <name>",
          "duration": "3 minutes",
          "effectiveness": "Temporary"
        }
      ],
      "permanent_solutions": [
        "Optimize database queries",
        "Implement connection pooling best practices",
        "Add read replicas for load distribution",
        "Implement caching layer"
      ]
    },
    {
      "id": "high-cpu-usage",
      "issue": "High CPU Usage",
      "symptoms": [
        "Slow response times",
        "Service timeouts",
        "Pod throttling"
      ],
      "quick_fixes": [
        {
          "action": "Scale horizontally",
          "command": "kubectl scale deployment <name> --replicas=10",
          "duration": "2 minutes",
          "effectiveness": "Immediate"
        },
        {
          "action": "Increase CPU limits",
          "command": "kubectl set resources deployment <name> --limits=cpu=2",
          "duration": "5 minutes",
          "effectiveness": "Medium-term"
        }
      ],
      "permanent_solutions": [
        "Profile and optimize CPU-intensive code",
        "Implement efficient algorithms",
        "Add caching for expensive computations",
        "Consider async processing for heavy tasks"
      ]
    },
    {
      "id": "pod-crashloop",
      "issue": "Pod CrashLoopBackOff",
      "symptoms": [
        "Pods constantly restarting",
        "Service unavailable",
        "Failed health checks"
      ],
      "quick_fixes": [
        {
          "action": "Check pod logs",
          "command": "kubectl logs <pod-name> --previous",
          "duration": "1 minute",
          "effectiveness": "Diagnostic"
        },
        {
          "action": "Describe pod for events",
          "command": "kubectl describe pod <pod-name>",
          "duration": "1 minute",
          "effectiveness": "Diagnostic"
        },
        {
          "action": "Delete and recreate pod",
          "command": "kubectl delete pod <pod-name>",
          "duration": "2 minutes",
          "effectiveness": "Sometimes effective"
        }
      ],
      "common_root_causes": [
        "Missing environment variables or secrets",
        "Incorrect liveness probe configuration",
        "Insufficient resources",
        "Image pull errors",
        "Configuration file issues"
      ]
    },
    {
      "id": "network-timeout",
      "issue": "Network Timeouts",
      "symptoms": [
        "Intermittent connection failures",
        "Slow service responses",
        "Gateway timeouts"
      ],
      "quick_fixes": [
        {
          "action": "Increase timeout values",
          "config": "timeout: 30s",
          "duration": "5 minutes",
          "effectiveness": "Temporary"
        },
        {
          "action": "Check service endpoints",
          "command": "kubectl get endpoints <service-name>",
          "duration": "1 minute",
          "effectiveness": "Diagnostic"
        }
      ],
      "permanent_solutions": [
        "Implement circuit breakers",
        "Add retry logic with exponential backoff",
        "Optimize network routes",
        "Implement service mesh for better control"
      ]
    }
  ]
}