openapi: 3.0.3
info:
  title: Application Metrics API
  version: 1.0.0
  description: API for accessing application performance metrics
servers:
  - url: https://your-backend-domain.com:8013
    description: Remote development server for Metrics API
  - url: https://localhost:8013
    description: Local development server for Metrics API

security:
  - apiKey: []

components:
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication
  
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
        code:
          type: string
          description: Error code
        timestamp:
          type: string
          format: date-time
          description: Error timestamp
          
    PerformanceMetric:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: Metric timestamp
          example: "2024-01-15T14:20:00Z"
        service:
          type: string
          description: Service name
          example: "web-service"
        value:
          type: number
          description: Metric value
          example: 150.5
        unit:
          type: string
          description: Metric unit
          example: "ms"
        percentiles:
          type: object
          description: Percentile data
          properties:
            p50:
              type: number
              example: 120
            p95:
              type: number
              example: 200
            p99:
              type: number
              example: 350
              
    ErrorRate:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: Metric timestamp
          example: "2024-01-15T14:20:00Z"
        service:
          type: string
          description: Service name
          example: "web-service"
        total_requests:
          type: integer
          description: Total number of requests
          example: 1000
        error_count:
          type: integer
          description: Number of error responses
          example: 25
        error_rate:
          type: number
          format: float
          description: Error rate as a decimal (0.0 to 1.0)
          example: 0.025
        status_codes:
          type: object
          description: Breakdown of HTTP status codes
          additionalProperties:
            type: integer
          example:
            "200": 975
            "404": 15
            "500": 10
            
    ResourceMetric:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: Metric timestamp
          example: "2024-01-15T14:20:00Z"
        service:
          type: string
          description: Service name
          example: "web-service"
        cpu_usage_percent:
          type: number
          format: float
          description: CPU usage percentage
          example: 75.5
        memory_usage_mb:
          type: number
          format: float
          description: Memory usage in megabytes
          example: 512
        memory_usage_percent:
          type: number
          format: float
          description: Memory usage percentage
          example: 85.2
        disk_io_read_mb:
          type: number
          format: float
          description: Disk I/O read in megabytes
          example: 25.4
        disk_io_write_mb:
          type: number
          format: float
          description: Disk I/O write in megabytes
          example: 15.2
        network_in_mb:
          type: number
          format: float
          description: Network inbound traffic in megabytes
          example: 45.8
        network_out_mb:
          type: number
          format: float
          description: Network outbound traffic in megabytes
          example: 38.6
          
    AvailabilityMetric:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: Metric timestamp
          example: "2024-01-15T14:20:00Z"
        service:
          type: string
          description: Service name
          example: "web-service"
        uptime_seconds:
          type: integer
          description: Service uptime in seconds
          example: 86400
        availability_percentage:
          type: number
          format: float
          description: Availability percentage
          example: 99.95
        health_check_success:
          type: integer
          description: Number of successful health checks
          example: 1439
        health_check_total:
          type: integer
          description: Total number of health checks
          example: 1440
        last_downtime:
          type: string
          format: date-time
          description: Timestamp of last downtime
          example: "2024-01-14T10:30:00Z"
        downtime_duration_seconds:
          type: integer
          description: Duration of last downtime in seconds
          example: 43
          
    TrendAnalysis:
      type: object
      properties:
        trend:
          type: string
          enum: [increasing, decreasing, stable, volatile]
          description: Overall trend direction
          example: "increasing"
        average_value:
          type: number
          format: float
          description: Average value over the analyzed period
          example: 150.5
        standard_deviation:
          type: number
          format: float
          description: Standard deviation of values
          example: 25.8
        anomalies:
          type: array
          description: List of detected anomalies
          items:
            $ref: '#/components/schemas/Anomaly'
            
    Anomaly:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: Timestamp of the anomaly
          example: "2024-01-15T14:20:00Z"
        value:
          type: number
          format: float
          description: Anomalous value
          example: 245.7
        deviation_percentage:
          type: number
          format: float
          description: Percentage deviation from normal
          example: 63.2
paths:
  /metrics/performance:
    get:
      operationId: get_performance_metrics
      summary: Retrieve performance data
      parameters:
        - name: metric_type
          in: query
          schema:
            type: string
            enum: [response_time, throughput, cpu_usage, memory_usage]
          description: Type of performance metric
        - name: start_time
          in: query
          schema:
            type: string
            format: date-time
          description: Start time for metrics
        - name: end_time
          in: query
          schema:
            type: string
            format: date-time
          description: End time for metrics
        - name: service
          in: query
          schema:
            type: string
          description: Filter by service name
      responses:
        '200':
          description: Performance metrics data
          content:
            application/json:
              schema:
                type: object
                properties:
                  metrics:
                    type: array
                    items:
                      $ref: '#/components/schemas/PerformanceMetric'
                example:
                  metrics:
                    - timestamp: "2024-01-15T14:20:00Z"
                      service: "web-service"
                      value: 150.5
                      unit: "ms"
                      percentiles:
                        p50: 120
                        p95: 200
                        p99: 350
        '400':
          description: Bad request - invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Invalid metric_type parameter"
                code: "INVALID_PARAMETER"
                timestamp: "2024-01-15T14:20:00Z"
        '401':
          description: Unauthorized - invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Invalid or missing API key"
                code: "UNAUTHORIZED"
                timestamp: "2024-01-15T14:20:00Z"
        '422':
          description: Unprocessable entity - invalid timestamp format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Invalid timestamp format. Use ISO 8601 format."
                code: "INVALID_TIMESTAMP"
                timestamp: "2024-01-15T14:20:00Z"
        '429':
          description: Too many requests - rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Rate limit exceeded. Try again later."
                code: "RATE_LIMIT_EXCEEDED"
                timestamp: "2024-01-15T14:20:00Z"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Failed to retrieve performance metrics"
                code: "INTERNAL_ERROR"
                timestamp: "2024-01-15T14:20:00Z"
  /metrics/errors:
    get:
      operationId: get_error_rates
      summary: Fetch error rate statistics
      parameters:
        - name: time_window
          in: query
          schema:
            type: string
            enum: [1h, 6h, 24h, 7d]
          description: Time window for error rates
        - name: service
          in: query
          schema:
            type: string
          description: Filter by service name
      responses:
        '200':
          description: Error rate statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_rates:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorRate'
                example:
                  error_rates:
                    - timestamp: "2024-01-15T14:20:00Z"
                      service: "web-service"
                      total_requests: 1000
                      error_count: 25
                      error_rate: 0.025
                      status_codes:
                        "200": 975
                        "404": 15
                        "500": 10
        '400':
          description: Bad request - invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized - invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests - rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /metrics/resources:
    get:
      operationId: get_resource_metrics
      summary: Monitor resource utilization
      parameters:
        - name: resource_type
          in: query
          schema:
            type: string
            enum: [cpu, memory, disk, network]
          description: Type of resource metric
        - name: service
          in: query
          schema:
            type: string
          description: Filter by service name
        - name: time_window
          in: query
          schema:
            type: string
            enum: [1h, 6h, 24h, 7d]
          description: Time window for metrics
      responses:
        '200':
          description: Resource utilization metrics
          content:
            application/json:
              schema:
                type: object
                properties:
                  metrics:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceMetric'
                example:
                  metrics:
                    - timestamp: "2024-01-15T14:20:00Z"
                      service: "web-service"
                      cpu_usage_percent: 75.5
                      memory_usage_mb: 512
                      memory_usage_percent: 85.2
                      disk_io_read_mb: 25.4
                      disk_io_write_mb: 15.2
                      network_in_mb: 45.8
                      network_out_mb: 38.6
        '400':
          description: Bad request - invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized - invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests - rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /metrics/availability:
    get:
      operationId: get_availability_metrics
      summary: Check service availability
      parameters:
        - name: service
          in: query
          schema:
            type: string
          description: Service name
        - name: time_window
          in: query
          schema:
            type: string
            enum: [1h, 6h, 24h, 7d, 30d]
          description: Time window for availability calculation
      responses:
        '200':
          description: Service availability metrics
          content:
            application/json:
              schema:
                type: object
                properties:
                  availability_metrics:
                    type: array
                    items:
                      $ref: '#/components/schemas/AvailabilityMetric'
                example:
                  availability_metrics:
                    - timestamp: "2024-01-15T14:20:00Z"
                      service: "web-service"
                      uptime_seconds: 86400
                      availability_percentage: 99.95
                      health_check_success: 1439
                      health_check_total: 1440
                      last_downtime: "2024-01-14T10:30:00Z"
                      downtime_duration_seconds: 43
        '400':
          description: Bad request - invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized - invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests - rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /metrics/trends:
    get:
      operationId: analyze_trends
      summary: Identify metric trends and anomalies
      parameters:
        - name: metric_name
          in: query
          required: true
          schema:
            type: string
          description: Name of the metric to analyze
        - name: service
          in: query
          schema:
            type: string
          description: Filter by service name
        - name: time_window
          in: query
          schema:
            type: string
            enum: [1h, 6h, 24h, 7d]
          description: Time window for trend analysis
        - name: anomaly_threshold
          in: query
          schema:
            type: number
            minimum: 0
            maximum: 100
            default: 95
          description: Percentile threshold for anomaly detection
      responses:
        '200':
          description: Trend analysis results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrendAnalysis'
              example:
                trend: "increasing"
                average_value: 150.5
                standard_deviation: 25.8
                anomalies:
                  - timestamp: "2024-01-15T14:20:00Z"
                    value: 245.7
                    deviation_percentage: 63.2
        '400':
          description: Bad request - invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized - invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests - rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'